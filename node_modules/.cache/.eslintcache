[{"/home/silvere/Desktop/Apps/todolist/src/index.js":"1","/home/silvere/Desktop/Apps/todolist/src/App.js":"2","/home/silvere/Desktop/Apps/todolist/src/reportWebVitals.js":"3","/home/silvere/Desktop/Apps/todolist/src/firebase.config.js":"4","/home/silvere/Desktop/Apps/todolist/src/Todo.js":"5"},{"size":535,"mtime":1671729006028,"results":"6","hashOfConfig":"7"},{"size":26343,"mtime":1672219904141,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1671729006028,"results":"9","hashOfConfig":"7"},{"size":620,"mtime":1671737842277,"results":"10","hashOfConfig":"7"},{"size":2040,"mtime":1672221695775,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},"1t0zk7f",{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},"/home/silvere/Desktop/Apps/todolist/src/index.js",[],[],[],"/home/silvere/Desktop/Apps/todolist/src/App.js",["31","32","33","34","35","36"],[],"import './App.css';\nimport 'firebase/compat/firestore';\nimport { db } from './firebase.config';\nimport { useState, useEffect } from \"react\"\nimport {collection, onSnapshot,where,query,setDoc,doc} from \"firebase/firestore\"\nimport { v4 } from 'uuid';\nimport Todo from './Todo';\n\nfunction App() {\n  const todoRef = collection(db,\"todos\")\n  const queryLongTerm = query(todoRef, where(\"timecategory\", \"==\", \"long-term\"));\n  const queryShortTerm = query(todoRef, where(\"timecategory\", \"==\", \"short-term\"));\n  const queryDate = query(todoRef, where(\"timecategory\", \"==\", \"date\"));\n\n  const [todosLT, setTodosLT] = useState([])\n  const [todosST, setTodosST] = useState([])\n\n  const [todosD1, setTodosD1] = useState([])\n  const [todosD2, setTodosD2] = useState([])\n  const [todosD3, setTodosD3] = useState([])\n  const [todosD4, setTodosD4] = useState([])\n  const [todosD5, setTodosD5] = useState([])\n  const [todosD6, setTodosD6] = useState([])\n  const [todosD7, setTodosD7] = useState([])\n\n  const [todosD8, setTodosD8] = useState([])\n  const [todosD9, setTodosD9] = useState([])\n  const [todosD10, setTodosD10] = useState([])\n  const [todosD11, setTodosD11] = useState([])\n  const [todosD12, setTodosD12] = useState([])\n  const [todosD13, setTodosD13] = useState([])\n  const [todosD14, setTodosD14] = useState([])\n\n  const [todosD15, setTodosD15] = useState([])\n  const [todosD16, setTodosD16] = useState([])\n  const [todosD17, setTodosD17] = useState([])\n  const [todosD18, setTodosD18] = useState([])\n  const [todosD19, setTodosD19] = useState([])\n  const [todosD20, setTodosD20] = useState([])\n  const [todosD21, setTodosD21] = useState([])\n\n  const [todosD22, setTodosD22] = useState([])\n  const [todosD23, setTodosD23] = useState([])\n  const [todosD24, setTodosD24] = useState([])\n  const [todosD25, setTodosD25] = useState([])\n  const [todosD26, setTodosD26] = useState([])\n  const [todosD27, setTodosD27] = useState([])\n  const [todosD28, setTodosD28] = useState([])\n\n  const [todosDR1, setTodosDR1] = useState([])\n  const [todosDR2, setTodosDR2] = useState([])\n  const [todosDR3, setTodosDR3] = useState([])\n  const [todosDR4, setTodosDR4] = useState([])\n  const [todosDR5, setTodosDR5] = useState([])\n  const [todosDR6, setTodosDR6] = useState([])\n  const [todosDR7, setTodosDR7] = useState([])\n\n  const [todosDR8, setTodosDR8] = useState([])\n  const [todosDR9, setTodosDR9] = useState([])\n  const [todosDR10, setTodosDR10] = useState([])\n  const [todosDR11, setTodosDR11] = useState([])\n  const [todosDR12, setTodosDR12] = useState([])\n  const [todosDR13, setTodosDR13] = useState([])\n  const [todosDR14, setTodosDR14] = useState([])\n\n  const [todosDR15, setTodosDR15] = useState([])\n  const [todosDR16, setTodosDR16] = useState([])\n  const [todosDR17, setTodosDR17] = useState([])\n  const [todosDR18, setTodosDR18] = useState([])\n  const [todosDR19, setTodosDR19] = useState([])\n  const [todosDR20, setTodosDR20] = useState([])\n  const [todosDR21, setTodosDR21] = useState([])\n\n  const [todosDR22, setTodosDR22] = useState([])\n  const [todosDR23, setTodosDR23] = useState([])\n  const [todosDR24, setTodosDR24] = useState([])\n  const [todosDR25, setTodosDR25] = useState([])\n  const [todosDR26, setTodosDR26] = useState([])\n  const [todosDR27, setTodosDR27] = useState([])\n  const [todosDR28, setTodosDR28] = useState([])\n\n  const days =[\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\",\"Sunday\"]\n  const date = new Date();\n  const day = date.getDay();\n\n  const nextDays = days.slice(day-1).concat(days.slice(0,day-1))\n\n  const nextDates =[]\n\n  const [nextDatesDays,setNextDatesDays]=useState([])\n\n  const queriesDate=[]\n  const queriesDateRepeat=[]\n\n  const [formText,setFormText] = useState(\"\")\n  const [formTimeCategory,setFormTimeCategory]=useState(\"\")\n  const [formDate,setFormDate]=useState(\"\")\n  const [formRepeat,setFormRepeat] =useState(\"\")\n\n  useEffect(()=>{\n\n    let j=28;\n\n    for (let i=0; i< j;i++) {\n      var next = new Date();\n      next.setDate(next.getDate()+i);\n      nextDates.push(next);\n    }\n\n    const nextDatesDaysTemp=[]\n\n    for (let i=0; i< j;i++) {\n      nextDatesDaysTemp.push(nextDates[i].toLocaleDateString('fr-FR').slice(0,5));\n    }\n\n    setNextDatesDays(nextDatesDaysTemp)\n  \n    for (let i=0; i< j;i++) {\n      queriesDate.push(query(query(queryDate, where(\"repeat\", \"==\", \"no\")), where(\"date\", \"==\", nextDates[i].toLocaleString('fr-FR').split(' ')[0])))\n    }\n  \n  \n    for (let i=0; i< j;i++) {\n      queriesDateRepeat.push(query(query(queryDate, where(\"repeat\", \"==\", \"yes\")),where(\"day\",\"==\",nextDates[i].getDay())))\n    }\n    \n\n    onSnapshot(queryLongTerm, snapshot => {\n      setTodosLT(snapshot.docs.map(doc => {\n        return {\n          id:doc.id,\n          ...doc.data()\n        }\n      }))\n    }\n    )\n    onSnapshot(queryShortTerm, snapshot => {\n      setTodosST(snapshot.docs.map(doc => {\n        return {\n          id:doc.id,\n          ...doc.data()\n        }\n      }))\n    }\n    )\n\n    onSnapshot(queriesDate[0], snapshot => {\n      setTodosD1(snapshot.docs.map(doc => {\n        return {\n          id:doc.id,\n          ...doc.data()\n        }\n      }))\n    }\n    )\n    \n    onSnapshot(queriesDate[1], snapshot => {\n      setTodosD2(snapshot.docs.map(doc => {\n        return {\n          id:doc.id,\n          ...doc.data()\n        }\n      }))\n    }\n    )\n\n    onSnapshot(queriesDate[2], snapshot => {\n      setTodosD3(snapshot.docs.map(doc => {\n        return {\n          id:doc.id,\n          ...doc.data()\n        }\n      }))\n    }\n    )\n\n    onSnapshot(queriesDate[3], snapshot => {\n      setTodosD4(snapshot.docs.map(doc => {\n        return {\n          id:doc.id,\n          ...doc.data()\n        }\n      }))\n    }\n    )\n\n    onSnapshot(queriesDate[4], snapshot => {\n      setTodosD5(snapshot.docs.map(doc => {\n        return {\n          id:doc.id,\n          ...doc.data()\n        }\n      }))\n    }\n    )\n\n    onSnapshot(queriesDate[5], snapshot => {\n      setTodosD6(snapshot.docs.map(doc => {\n        return {\n          id:doc.id,\n          ...doc.data()\n        }\n      }))\n    }\n    )\n\n    onSnapshot(queriesDate[6], snapshot => {\n      setTodosD7(snapshot.docs.map(doc => {\n        return {\n          id:doc.id,\n          ...doc.data()\n        }\n      }))\n    }\n    )\n\n    onSnapshot(queriesDate[7], snapshot => {\n      setTodosD8(snapshot.docs.map(doc => {\n        return {\n          id:doc.id,\n          ...doc.data()\n        }\n      }))\n    }\n    )\n    \n    onSnapshot(queriesDate[8], snapshot => {\n      setTodosD9(snapshot.docs.map(doc => {\n        return {\n          id:doc.id,\n          ...doc.data()\n        }\n      }))\n    }\n    )\n\n    onSnapshot(queriesDate[9], snapshot => {\n      setTodosD10(snapshot.docs.map(doc => {\n        return {\n          id:doc.id,\n          ...doc.data()\n        }\n      }))\n    }\n    )\n\n    onSnapshot(queriesDate[10], snapshot => {\n      setTodosD11(snapshot.docs.map(doc => {\n        return {\n          id:doc.id,\n          ...doc.data()\n        }\n      }))\n    }\n    )\n\n    onSnapshot(queriesDate[11], snapshot => {\n      setTodosD12(snapshot.docs.map(doc => {\n        return {\n          id:doc.id,\n          ...doc.data()\n        }\n      }))\n    }\n    )\n\n    onSnapshot(queriesDate[12], snapshot => {\n      setTodosD13(snapshot.docs.map(doc => {\n        return {\n          id:doc.id,\n          ...doc.data()\n        }\n      }))\n    }\n    )\n\n    onSnapshot(queriesDate[13], snapshot => {\n      setTodosD14(snapshot.docs.map(doc => {\n        return {\n          id:doc.id,\n          ...doc.data()\n        }\n      }))\n    }\n    )\n\n    onSnapshot(queriesDate[14], snapshot => {\n      setTodosD15(snapshot.docs.map(doc => {\n        return {\n          id:doc.id,\n          ...doc.data()\n        }\n      }))\n    }\n    )\n    \n    onSnapshot(queriesDate[15], snapshot => {\n      setTodosD16(snapshot.docs.map(doc => {\n        return {\n          id:doc.id,\n          ...doc.data()\n        }\n      }))\n    }\n    )\n\n    onSnapshot(queriesDate[16], snapshot => {\n      setTodosD17(snapshot.docs.map(doc => {\n        return {\n          id:doc.id,\n          ...doc.data()\n        }\n      }))\n    }\n    )\n\n    onSnapshot(queriesDate[17], snapshot => {\n      setTodosD18(snapshot.docs.map(doc => {\n        return {\n          id:doc.id,\n          ...doc.data()\n        }\n      }))\n    }\n    )\n\n    onSnapshot(queriesDate[18], snapshot => {\n      setTodosD19(snapshot.docs.map(doc => {\n        return {\n          id:doc.id,\n          ...doc.data()\n        }\n      }))\n    }\n    )\n\n    onSnapshot(queriesDate[19], snapshot => {\n      setTodosD20(snapshot.docs.map(doc => {\n        return {\n          id:doc.id,\n          ...doc.data()\n        }\n      }))\n    }\n    )\n\n    onSnapshot(queriesDate[20], snapshot => {\n      setTodosD21(snapshot.docs.map(doc => {\n        return {\n          id:doc.id,\n          ...doc.data()\n        }\n      }))\n    }\n    )\n\n    onSnapshot(queriesDate[21], snapshot => {\n      setTodosD22(snapshot.docs.map(doc => {\n        return {\n          id:doc.id,\n          ...doc.data()\n        }\n      }))\n    }\n    )\n    \n    onSnapshot(queriesDate[22], snapshot => {\n      setTodosD23(snapshot.docs.map(doc => {\n        return {\n          id:doc.id,\n          ...doc.data()\n        }\n      }))\n    }\n    )\n\n    onSnapshot(queriesDate[23], snapshot => {\n      setTodosD24(snapshot.docs.map(doc => {\n        return {\n          id:doc.id,\n          ...doc.data()\n        }\n      }))\n    }\n    )\n\n    onSnapshot(queriesDate[24], snapshot => {\n      setTodosD25(snapshot.docs.map(doc => {\n        return {\n          id:doc.id,\n          ...doc.data()\n        }\n      }))\n    }\n    )\n\n    onSnapshot(queriesDate[25], snapshot => {\n      setTodosD26(snapshot.docs.map(doc => {\n        return {\n          id:doc.id,\n          ...doc.data()\n        }\n      }))\n    }\n    )\n\n    onSnapshot(queriesDate[26], snapshot => {\n      setTodosD27(snapshot.docs.map(doc => {\n        return {\n          id:doc.id,\n          ...doc.data()\n        }\n      }))\n    }\n    )\n\n    onSnapshot(queriesDate[27], snapshot => {\n      setTodosD28(snapshot.docs.map(doc => {\n        return {\n          id:doc.id,\n          ...doc.data()\n        }\n      }))\n    }\n    )\n\n    onSnapshot(queriesDateRepeat[0], snapshot => {\n      setTodosDR1(snapshot.docs.map(doc => {\n        return {\n          id:doc.id,\n          ...doc.data()\n        }\n      }))\n    }\n    )\n\n    onSnapshot(queriesDateRepeat[1], snapshot => {\n      setTodosDR2(snapshot.docs.map(doc => {\n        return {\n          id:doc.id,\n          ...doc.data()\n        }\n      }))\n    }\n    )\n\n    onSnapshot(queriesDateRepeat[2], snapshot => {\n      setTodosDR3(snapshot.docs.map(doc => {\n        return {\n          id:doc.id,\n          ...doc.data()\n        }\n      }))\n    }\n    )\n\n    onSnapshot(queriesDateRepeat[3], snapshot => {\n      setTodosDR4(snapshot.docs.map(doc => {\n        return {\n          id:doc.id,\n          ...doc.data()\n        }\n      }))\n    }\n    )\n\n    onSnapshot(queriesDateRepeat[4], snapshot => {\n      setTodosDR5(snapshot.docs.map(doc => {\n        return {\n          id:doc.id,\n          ...doc.data()\n        }\n      }))\n    }\n    )\n\n    onSnapshot(queriesDateRepeat[5], snapshot => {\n      setTodosDR6(snapshot.docs.map(doc => {\n        return {\n          id:doc.id,\n          ...doc.data()\n        }\n      }))\n    }\n    )\n\n    onSnapshot(queriesDateRepeat[6], snapshot => {\n      setTodosDR7(snapshot.docs.map(doc => {\n        return {\n          id:doc.id,\n          ...doc.data()\n        }\n      }))\n    }\n    )\n\n    onSnapshot(queriesDateRepeat[7], snapshot => {\n      setTodosDR8(snapshot.docs.map(doc => {\n        return {\n          id:doc.id,\n          ...doc.data()\n        }\n      }))\n    }\n    )\n    \n    onSnapshot(queriesDateRepeat[8], snapshot => {\n      setTodosDR9(snapshot.docs.map(doc => {\n        return {\n          id:doc.id,\n          ...doc.data()\n        }\n      }))\n    }\n    )\n\n    onSnapshot(queriesDateRepeat[9], snapshot => {\n      setTodosDR10(snapshot.docs.map(doc => {\n        return {\n          id:doc.id,\n          ...doc.data()\n        }\n      }))\n    }\n    )\n\n    onSnapshot(queriesDateRepeat[10], snapshot => {\n      setTodosDR11(snapshot.docs.map(doc => {\n        return {\n          id:doc.id,\n          ...doc.data()\n        }\n      }))\n    }\n    )\n\n    onSnapshot(queriesDateRepeat[11], snapshot => {\n      setTodosDR12(snapshot.docs.map(doc => {\n        return {\n          id:doc.id,\n          ...doc.data()\n        }\n      }))\n    }\n    )\n\n    onSnapshot(queriesDateRepeat[12], snapshot => {\n      setTodosDR13(snapshot.docs.map(doc => {\n        return {\n          id:doc.id,\n          ...doc.data()\n        }\n      }))\n    }\n    )\n\n    onSnapshot(queriesDateRepeat[13], snapshot => {\n      setTodosDR14(snapshot.docs.map(doc => {\n        return {\n          id:doc.id,\n          ...doc.data()\n        }\n      }))\n    }\n    )\n\n    onSnapshot(queriesDateRepeat[14], snapshot => {\n      setTodosDR15(snapshot.docs.map(doc => {\n        return {\n          id:doc.id,\n          ...doc.data()\n        }\n      }))\n    }\n    )\n\n    onSnapshot(queriesDateRepeat[15], snapshot => {\n      setTodosDR16(snapshot.docs.map(doc => {\n        return {\n          id:doc.id,\n          ...doc.data()\n        }\n      }))\n    }\n    )\n\n    onSnapshot(queriesDateRepeat[16], snapshot => {\n      setTodosDR17(snapshot.docs.map(doc => {\n        return {\n          id:doc.id,\n          ...doc.data()\n        }\n      }))\n    }\n    )\n\n    onSnapshot(queriesDateRepeat[17], snapshot => {\n      setTodosDR18(snapshot.docs.map(doc => {\n        return {\n          id:doc.id,\n          ...doc.data()\n        }\n      }))\n    }\n    )\n\n    onSnapshot(queriesDateRepeat[18], snapshot => {\n      setTodosDR19(snapshot.docs.map(doc => {\n        return {\n          id:doc.id,\n          ...doc.data()\n        }\n      }))\n    }\n    )\n\n    onSnapshot(queriesDateRepeat[19], snapshot => {\n      setTodosDR20(snapshot.docs.map(doc => {\n        return {\n          id:doc.id,\n          ...doc.data()\n        }\n      }))\n    }\n    )\n\n    onSnapshot(queriesDateRepeat[20], snapshot => {\n      setTodosDR21(snapshot.docs.map(doc => {\n        return {\n          id:doc.id,\n          ...doc.data()\n        }\n      }))\n    }\n    )\n\n    onSnapshot(queriesDateRepeat[21], snapshot => {\n      setTodosDR22(snapshot.docs.map(doc => {\n        return {\n          id:doc.id,\n          ...doc.data()\n        }\n      }))\n    }\n    )\n    \n    onSnapshot(queriesDateRepeat[22], snapshot => {\n      setTodosDR23(snapshot.docs.map(doc => {\n        return {\n          id:doc.id,\n          ...doc.data()\n        }\n      }))\n    }\n    )\n\n    onSnapshot(queriesDateRepeat[23], snapshot => {\n      setTodosDR24(snapshot.docs.map(doc => {\n        return {\n          id:doc.id,\n          ...doc.data()\n        }\n      }))\n    }\n    )\n\n    onSnapshot(queriesDateRepeat[24], snapshot => {\n      setTodosDR25(snapshot.docs.map(doc => {\n        return {\n          id:doc.id,\n          ...doc.data()\n        }\n      }))\n    }\n    )\n\n    onSnapshot(queriesDateRepeat[25], snapshot => {\n      setTodosDR26(snapshot.docs.map(doc => {\n        return {\n          id:doc.id,\n          ...doc.data()\n        }\n      }))\n    }\n    )\n\n    onSnapshot(queriesDateRepeat[26], snapshot => {\n      setTodosDR27(snapshot.docs.map(doc => {\n        return {\n          id:doc.id,\n          ...doc.data()\n        }\n      }))\n    }\n    )\n\n    onSnapshot(queriesDateRepeat[27], snapshot => {\n      setTodosDR28(snapshot.docs.map(doc => {\n        return {\n          id:doc.id,\n          ...doc.data()\n        }\n      }))\n    }\n    )\n  }\n, [])\n\nconst addTodo = async (e) => {\n    e.preventDefault();\n\n    var x = v4();\n\n    if (formTimeCategory==\"long-term\"){\n\n      await setDoc(doc(db, \"todos\", x),{text:formText,timecategory:formTimeCategory})\n\n    } else if (formTimeCategory==\"short-term\"){\n\n      await setDoc(doc(db, \"todos\", x),{text:formText,timecategory:formTimeCategory,deadline:formDate})\n\n    } else if (formTimeCategory==\"date\"){\n      if (formRepeat==\"yes\"){\n        const formatedDate = new Date(formDate);\n        const formDay = formatedDate.getDay();\n\n        await setDoc(doc(db, \"todos\", x),{text:formText,timecategory:formTimeCategory,date:formDate,repeat:formRepeat,day:formDay})\n    \n        \n      \n      } else {\n        await setDoc(doc(db, \"todos\", x),{text:formText,timecategory:formTimeCategory,date:formDate,repeat:formRepeat})\n      }\n    }\n\n    setFormText('');\n    setFormDate('');\n    setFormTimeCategory('');\n    setFormRepeat('');\n}\n\nlet urlAddImg = new URL(\"add.png\",import.meta.url);\n\n  return (\n    <div className=\"App\">\n\n    \n    <form onSubmit={addTodo}>\n        <label>Task:</label> &nbsp; <input value={formText} onChange={(e) => setFormText(e.target.value)} />\n        &nbsp; &nbsp; <label>Time category:</label> &nbsp; <input value ={formTimeCategory} onChange={(e) => setFormTimeCategory(e.target.value)} />\n        &nbsp; &nbsp; <label>Deadline/date (DD/MM/YYYY):</label> &nbsp; <input value={formDate} onChange={(e) => setFormDate(e.target.value)} />\n        &nbsp; &nbsp; <label>Repeat:</label> &nbsp; <input value={formRepeat} onChange={(e) => setFormRepeat(e.target.value)} /> <br/> <br/>\n      \n        <button type=\"submit\"><img className=\"form-button\" src={urlAddImg}/></button>\n      </form>\n\n\n    <br/>\n\n      <h2>Next weeks:</h2>\n\n\n      <table className=\"next-week\">\n      <thead><tr><th style={{color:\"#720004\"}}>{nextDays[0]} ({nextDatesDays[0]})</th><th>{nextDays[1]} ({nextDatesDays[1]})</th><th>{nextDays[2]} ({nextDatesDays[2]})</th><th>{nextDays[3]} ({nextDatesDays[3]})</th><th>{nextDays[4]} ({nextDatesDays[4]})</th><th>{nextDays[5]} ({nextDatesDays[5]})</th><th>{nextDays[6]} ({nextDatesDays[6]})</th></tr></thead>\n      <tbody>\n    <tr>\n     <td className=\"today\">\n    {todosD1.map(todo => <Todo key={todo.id} id={todo.id} timeCategory=\"date\" text={todo.text}/>)}\n    {todosDR1.map(todo => <Todo key={todo.id} id={todo.id} timeCategory=\"date\" text={todo.text}/>)}\n    </td><td className=\"next-week-day\">\n    {todosD2.map(todo => <Todo key={todo.id} id={todo.id} timeCategory=\"date\" text={todo.text}/>)}\n    {todosDR2.map(todo => <Todo key={todo.id} id={todo.id} timeCategory=\"date\" text={todo.text}/>)}\n    </td><td className=\"next-week-day\">\n    {todosD3.map(todo => <Todo key={todo.id} id={todo.id} timeCategory=\"date\" text={todo.text}/>)}\n    {todosDR3.map(todo => <Todo key={todo.id} id={todo.id} timeCategory=\"date\" text={todo.text}/>)}\n    </td><td className=\"next-week-day\">\n    {todosD4.map(todo => <Todo key={todo.id} id={todo.id} timeCategory=\"date\" text={todo.text}/>)}\n    {todosDR4.map(todo => <Todo key={todo.id} id={todo.id} timeCategory=\"date\" text={todo.text}/>)}\n    </td><td className=\"next-week-day\">\n    {todosD5.map(todo => <Todo key={todo.id} id={todo.id} timeCategory=\"date\" text={todo.text}/>)}\n    {todosDR5.map(todo => <Todo key={todo.id} id={todo.id} timeCategory=\"date\" text={todo.text}/>)}\n    </td><td className=\"next-week-day\">\n    {todosD6.map(todo => <Todo key={todo.id} id={todo.id} timeCategory=\"date\" text={todo.text}/>)}\n    {todosDR6.map(todo => <Todo key={todo.id} id={todo.id} timeCategory=\"date\" text={todo.text}/>)}\n    </td><td className=\"next-week-day\">\n    {todosD7.map(todo => <Todo key={todo.id} id={todo.id} timeCategory=\"date\" text={todo.text}/>)}\n    {todosDR7.map(todo => <Todo key={todo.id} id={todo.id} timeCategory=\"date\" text={todo.text}/>)}\n    </td></tr></tbody></table>\n\n    <br/>\n\n    <table className=\"next-week\">\n      <thead><tr><th>{nextDays[0]}({nextDatesDays[7]})</th><th>{nextDays[1]}({nextDatesDays[8]})</th><th>{nextDays[2]} ({nextDatesDays[9]})</th><th>{nextDays[3]} ({nextDatesDays[10]})</th><th>{nextDays[4]} ({nextDatesDays[11]})</th><th>{nextDays[5]} ({nextDatesDays[12]})</th><th>{nextDays[6]} ({nextDatesDays[13]})</th></tr></thead>\n      <tbody>\n    <tr>\n     <td className=\"next-week-day\">\n    {todosD8.map(todo => <Todo key={todo.id} id={todo.id} timeCategory=\"date\" text={todo.text}/>)}\n    {todosDR8.map(todo => <Todo key={todo.id} id={todo.id} timeCategory=\"date\" text={todo.text}/>)}\n    </td><td className=\"next-week-day\">\n    {todosD9.map(todo => <Todo key={todo.id} id={todo.id} timeCategory=\"date\" text={todo.text}/>)}\n    {todosDR9.map(todo => <Todo key={todo.id} id={todo.id} timeCategory=\"date\" text={todo.text}/>)}\n    </td><td className=\"next-week-day\">\n    {todosD10.map(todo => <Todo key={todo.id} id={todo.id} timeCategory=\"date\" text={todo.text}/>)}\n    {todosDR10.map(todo =>  <Todo key={todo.id} id={todo.id} timeCategory=\"date\" text={todo.text}/>)}\n    </td><td className=\"next-week-day\">\n    {todosD11.map(todo =>  <Todo key={todo.id} id={todo.id} timeCategory=\"date\" text={todo.text}/>)}\n    {todosDR11.map(todo =>  <Todo key={todo.id} id={todo.id} timeCategory=\"date\" text={todo.text}/>)}\n    </td><td className=\"next-week-day\">\n    {todosD12.map(todo =>  <Todo key={todo.id} id={todo.id} timeCategory=\"date\" text={todo.text}/>)}\n    {todosDR12.map(todo =>  <Todo key={todo.id} id={todo.id} timeCategory=\"date\" text={todo.text}/>)}\n    </td><td className=\"next-week-day\">\n    {todosD13.map(todo =>  <Todo key={todo.id} id={todo.id} timeCategory=\"date\" text={todo.text}/>)}\n    {todosDR13.map(todo =>  <Todo key={todo.id} id={todo.id} timeCategory=\"date\" text={todo.text}/>)}\n    </td><td className=\"next-week-day\">\n    {todosD14.map(todo =>  <Todo key={todo.id} id={todo.id} timeCategory=\"date\" text={todo.text}/>)}\n    {todosDR14.map(todo => <Todo key={todo.id} id={todo.id} timeCategory=\"date\" text={todo.text}/>)}\n    </td></tr></tbody></table>\n\n    <br/>\n\n    <table className=\"next-week\">\n      <thead><tr><th>{nextDays[0]}({nextDatesDays[14]})</th><th>{nextDays[1]}({nextDatesDays[15]})</th><th>{nextDays[2]} ({nextDatesDays[16]})</th><th>{nextDays[3]} ({nextDatesDays[17]})</th><th>{nextDays[4]} ({nextDatesDays[18]})</th><th>{nextDays[5]} ({nextDatesDays[19]})</th><th>{nextDays[6]} ({nextDatesDays[20]})</th></tr></thead>\n      <tbody>\n    <tr>\n     <td className=\"next-week-day\">\n    {todosD15.map(todo => <Todo key={todo.id} id={todo.id} timeCategory=\"date\" text={todo.text}/>)}\n    {todosDR15.map(todo => <Todo key={todo.id} id={todo.id} timeCategory=\"date\" text={todo.text}/>)}\n    </td><td className=\"next-week-day\">\n    {todosD16.map(todo => <Todo key={todo.id} id={todo.id} timeCategory=\"date\" text={todo.text}/>)}\n    {todosDR16.map(todo => <Todo key={todo.id} id={todo.id} timeCategory=\"date\" text={todo.text}/>)}\n    </td><td className=\"next-week-day\">\n    {todosD17.map(todo => <Todo key={todo.id} id={todo.id} timeCategory=\"date\" text={todo.text}/>)}\n    {todosDR17.map(todo =>  <Todo key={todo.id} id={todo.id} timeCategory=\"date\" text={todo.text}/>)}\n    </td><td className=\"next-week-day\">\n    {todosD18.map(todo =>  <Todo key={todo.id} id={todo.id} timeCategory=\"date\" text={todo.text}/>)}\n    {todosDR18.map(todo =>  <Todo key={todo.id} id={todo.id} timeCategory=\"date\" text={todo.text}/>)}\n    </td><td className=\"next-week-day\">\n    {todosD19.map(todo =>  <Todo key={todo.id} id={todo.id} timeCategory=\"date\" text={todo.text}/>)}\n    {todosDR19.map(todo =>  <Todo key={todo.id} id={todo.id} timeCategory=\"date\" text={todo.text}/>)}\n    </td><td className=\"next-week-day\">\n    {todosD20.map(todo =>  <Todo key={todo.id} id={todo.id} timeCategory=\"date\" text={todo.text}/>)}\n    {todosDR20.map(todo =>  <Todo key={todo.id} id={todo.id} timeCategory=\"date\" text={todo.text}/>)}\n    </td><td className=\"next-week-day\">\n    {todosD21.map(todo =>  <Todo key={todo.id} id={todo.id} timeCategory=\"date\" text={todo.text}/>)}\n    {todosDR21.map(todo => <Todo key={todo.id} id={todo.id} timeCategory=\"date\" text={todo.text}/>)}\n    </td></tr></tbody></table>\n\n    <br/>\n\n    <table className=\"next-week\">\n      <thead><tr><th>{nextDays[0]}({nextDatesDays[21]})</th><th>{nextDays[1]}({nextDatesDays[22]})</th><th>{nextDays[2]} ({nextDatesDays[23]})</th><th>{nextDays[3]} ({nextDatesDays[24]})</th><th>{nextDays[4]} ({nextDatesDays[25]})</th><th>{nextDays[5]} ({nextDatesDays[26]})</th><th>{nextDays[6]} ({nextDatesDays[27]})</th></tr></thead>\n      <tbody>\n    <tr>\n     <td className=\"next-week-day\">\n    {todosD22.map(todo => <Todo key={todo.id} id={todo.id} timeCategory=\"date\" text={todo.text}/>)}\n    {todosDR22.map(todo => <Todo key={todo.id} id={todo.id} timeCategory=\"date\" text={todo.text}/>)}\n    </td><td className=\"next-week-day\">\n    {todosD23.map(todo => <Todo key={todo.id} id={todo.id} timeCategory=\"date\" text={todo.text}/>)}\n    {todosDR23.map(todo => <Todo key={todo.id} id={todo.id} timeCategory=\"date\" text={todo.text}/>)}\n    </td><td className=\"next-week-day\">\n    {todosD24.map(todo => <Todo key={todo.id} id={todo.id} timeCategory=\"date\" text={todo.text}/>)}\n    {todosDR24.map(todo =>  <Todo key={todo.id} id={todo.id} timeCategory=\"date\" text={todo.text}/>)}\n    </td><td className=\"next-week-day\">\n    {todosD25.map(todo =>  <Todo key={todo.id} id={todo.id} timeCategory=\"date\" text={todo.text}/>)}\n    {todosDR25.map(todo =>  <Todo key={todo.id} id={todo.id} timeCategory=\"date\" text={todo.text}/>)}\n    </td><td className=\"next-week-day\">\n    {todosD26.map(todo =>  <Todo key={todo.id} id={todo.id} timeCategory=\"date\" text={todo.text}/>)}\n    {todosDR26.map(todo =>  <Todo key={todo.id} id={todo.id} timeCategory=\"date\" text={todo.text}/>)}\n    </td><td className=\"next-week-day\">\n    {todosD27.map(todo =>  <Todo key={todo.id} id={todo.id} timeCategory=\"date\" text={todo.text}/>)}\n    {todosDR27.map(todo =>  <Todo key={todo.id} id={todo.id} timeCategory=\"date\" text={todo.text}/>)}\n    </td><td className=\"next-week-day\">\n    {todosD28.map(todo =>  <Todo key={todo.id} id={todo.id} timeCategory=\"date\" text={todo.text}/>)}\n    {todosDR28.map(todo => <Todo key={todo.id} id={todo.id} timeCategory=\"date\" text={todo.text}/>)}\n    </td></tr></tbody></table>\n\n    <br/><br/>\n    <h2>Short-term:</h2>\n\n    <table className=\"short-term\"><thead><tr><th></th><th>Deadline</th></tr></thead>\n      <tbody>{todosST.map(todo => <Todo key={todo.id} id={todo.id} text={todo.text} timeCategory=\"short-term\" date={todo.deadline}/>)}</tbody></table>\n     \n     <br/><br/>\n\n     <h2>Long-term:</h2>\n      \n    <table className=\"long-term\">\n       <tbody>\n       {todosLT.map(todo =><Todo key={todo.id} id={todo.id} timeCategory=\"long-term\" text={todo.text}/>)}\n    </tbody>\n    </table>\n    </div>\n  );\n}\n\nexport default App;\n","/home/silvere/Desktop/Apps/todolist/src/reportWebVitals.js",[],[],"/home/silvere/Desktop/Apps/todolist/src/firebase.config.js",["37"],[],"import { initializeApp } from \"firebase/app\";\nimport { getAnalytics } from \"firebase/analytics\";\nimport { getFirestore } from \"firebase/firestore\"; \n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyBcqcfwG3kn8gAarLVhr1HmSzdt2d-GUwU\",\n    authDomain: \"todolist-bfbd8.firebaseapp.com\",\n    projectId: \"todolist-bfbd8\",\n    storageBucket: \"todolist-bfbd8.appspot.com\",\n    messagingSenderId: \"308178553357\",\n    appId: \"1:308178553357:web:c9bfe87553d945f2716344\",\n    measurementId: \"G-FJ9WDZC88V\"\n};\n\nconst app = initializeApp(firebaseConfig);\nconst analytics = getAnalytics(app);\n\nconst db = getFirestore(app);\n\nexport { db }","/home/silvere/Desktop/Apps/todolist/src/Todo.js",["38","39"],[],"import React, { Component } from 'react';\nimport { collection, doc, deleteDoc } from \"firebase/firestore\";\nimport { db } from './firebase.config';\n\nclass Todo extends Component {\n\n    constructor(props) {\n      super(props)\n  \n      this.state = {\n          id:this.props.id,\n          timeCategory:this.props.timeCategory,\n          date:this.props.date,\n          text:this.props.text,\n          isSelected:false, \n        }\n  \n      this.selfRef = React.createRef()\n  \n  \n      this.supress = this.supress.bind(this)\n    \n  }\n  \n  \n  \n  supress(e) {\n    const todoRef = collection(db,\"todos\")\n    if (e.keyCode === 46 && this.state.isSelected) {\n        if (window.confirm('Are you sure you wish to delete these todos')) {\n        deleteDoc(doc(db,\"todos\",this.state.id));\n        }\n    }\n    }\n\n    \n  \n  \n    render() {\n\n        let urlToxicImg = new URL(\"toxic.png\",import.meta.url);\n\n        if (this.state.timeCategory===\"long-term\") {\n            return <tr key={this.state.id}> <td tabIndex=\"0\" style={{backgroundColor:(this.state.isSelected ? \"#FFAF19\": \"white\")}} onKeyDown = {(e) => this.supress(e)} onClick={()=> this.setState({isSelected:!this.state.isSelected})} className=\"todo\">{this.state.text}</td></tr>\n        } else if (this.state.timeCategory===\"short-term\") {\n           return  <tr key={this.state.id} className=\"short-term-task todo\" style={{backgroundColor:(this.state.isSelected ? \"#FFAF19\": \"white\")}} tabIndex=\"0\" onKeyDown = {(e) => this.supress(e)} onClick={()=> this.setState({isSelected:!this.state.isSelected})}><td><div> {this.state.text}</div></td><td><div style={{textAlign:\"center\"}}>{this.state.date}</div></td></tr>\n        } else if (this.state.timeCategory===\"date\") {\n            return <div className=\"todo\" style={{backgroundColor:(this.state.isSelected ? \"#FFAF19\": \"white\")}} key={this.state.id} tabIndex=\"0\" onKeyDown = {(e) => this.supress(e)} onClick={()=> this.setState({isSelected:!this.state.isSelected})}>&#x25B7; {this.state.text}</div>\n        }\n    }\n  }\n  \n  export default Todo;\n",{"ruleId":"40","severity":1,"message":"41","line":707,"column":3,"nodeType":"42","endLine":707,"endColumn":5,"suggestions":"43"},{"ruleId":"44","severity":1,"message":"45","line":714,"column":25,"nodeType":"46","messageId":"47","endLine":714,"endColumn":27},{"ruleId":"44","severity":1,"message":"45","line":718,"column":32,"nodeType":"46","messageId":"47","endLine":718,"endColumn":34},{"ruleId":"44","severity":1,"message":"45","line":722,"column":32,"nodeType":"46","messageId":"47","endLine":722,"endColumn":34},{"ruleId":"44","severity":1,"message":"45","line":723,"column":21,"nodeType":"46","messageId":"47","endLine":723,"endColumn":23},{"ruleId":"48","severity":1,"message":"49","line":754,"column":31,"nodeType":"50","endLine":754,"endColumn":77},{"ruleId":"51","severity":1,"message":"52","line":16,"column":7,"nodeType":"53","messageId":"54","endLine":16,"endColumn":16},{"ruleId":"51","severity":1,"message":"55","line":28,"column":11,"nodeType":"53","messageId":"54","endLine":28,"endColumn":18},{"ruleId":"51","severity":1,"message":"56","line":41,"column":13,"nodeType":"53","messageId":"54","endLine":41,"endColumn":24},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'nextDates', 'queriesDate', 'queriesDateRepeat', 'queryDate', 'queryLongTerm', and 'queryShortTerm'. Either include them or remove the dependency array.","ArrayExpression",["57"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'analytics' is assigned a value but never used.","Identifier","unusedVar","'todoRef' is assigned a value but never used.","'urlToxicImg' is assigned a value but never used.",{"desc":"58","fix":"59"},"Update the dependencies array to be: [nextDates, queriesDate, queriesDateRepeat, queryDate, queryLongTerm, queryShortTerm]",{"range":"60","text":"61"},[15554,15556],"[nextDates, queriesDate, queriesDateRepeat, queryDate, queryLongTerm, queryShortTerm]"]